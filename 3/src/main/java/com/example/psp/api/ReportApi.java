/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.psp.api;

import com.example.psp.dto.BriefSalesReportDTO;
import com.example.psp.dto.DetailedSalesReportDTO;
import com.example.psp.dto.ProblemDetails;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-12-03T17:27:47.624170900+02:00[Europe/Vilnius]")
@Validated
@Api(value = "report", description = "the report API")
public interface ReportApi {

    default ReportApiDelegate getDelegate() {
        return new ReportApiDelegate() {};
    }

    /**
     * GET /report/brief-sales-report : Endpoint to get brief sales report.
     *
     * @return Success (status code 200)
     *         or Unauthorized (status code 401)
     */
    @ApiOperation(value = "Endpoint to get brief sales report.", nickname = "reportBriefSalesReportGet", notes = "", response = BriefSalesReportDTO.class, tags={ "Report", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = BriefSalesReportDTO.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = ProblemDetails.class) })
    @GetMapping(
        value = "/report/brief-sales-report",
        produces = { "application/json" }
    )
    default ResponseEntity<BriefSalesReportDTO> reportBriefSalesReportGet() {
        return getDelegate().reportBriefSalesReportGet();
    }


    /**
     * GET /report/detailed-sales-report : Endpoint to get detailed sales report.
     *
     * @return Success (status code 200)
     *         or Unauthorized (status code 401)
     */
    @ApiOperation(value = "Endpoint to get detailed sales report.", nickname = "reportDetailedSalesReportGet", notes = "", response = DetailedSalesReportDTO.class, tags={ "Report", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = DetailedSalesReportDTO.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = ProblemDetails.class) })
    @GetMapping(
        value = "/report/detailed-sales-report",
        produces = { "application/json" }
    )
    default ResponseEntity<DetailedSalesReportDTO> reportDetailedSalesReportGet() {
        return getDelegate().reportDetailedSalesReportGet();
    }

}
