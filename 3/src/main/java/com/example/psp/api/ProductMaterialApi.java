/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.psp.api;

import com.example.psp.dto.ProductMaterial;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-12-03T17:27:47.624170900+02:00[Europe/Vilnius]")
@Validated
@Api(value = "product-material", description = "the product-material API")
public interface ProductMaterialApi {

    default ProductMaterialApiDelegate getDelegate() {
        return new ProductMaterialApiDelegate() {};
    }

    /**
     * POST /product-material : Assign material to a product.
     *
     * @param productMaterial  (optional)
     * @return Success (status code 200)
     *         or If some class details are missing. (status code 400)
     */
    @ApiOperation(value = "Assign material to a product.", nickname = "productMaterialPost", notes = "", tags={ "ProductMaterial", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success"),
        @ApiResponse(code = 400, message = "If some class details are missing.") })
    @PostMapping(
        value = "/product-material",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> productMaterialPost(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) ProductMaterial productMaterial) {
        return getDelegate().productMaterialPost(productMaterial);
    }


    /**
     * GET /product-material/{productId} : Get list of product&#39;s all assigned materials by product Id.
     *
     * @param productId  (required)
     * @return Success (status code 200)
     *         or If product with such id does not exist. (status code 404)
     */
    @ApiOperation(value = "Get list of product's all assigned materials by product Id.", nickname = "productMaterialProductIdGet", notes = "", response = ProductMaterial.class, responseContainer = "List", tags={ "ProductMaterial", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ProductMaterial.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "If product with such id does not exist.") })
    @GetMapping(
        value = "/product-material/{productId}",
        produces = { "application/json" }
    )
    default ResponseEntity<List<ProductMaterial>> productMaterialProductIdGet(@ApiParam(value = "",required=true) @PathVariable("productId") Integer productId) {
        return getDelegate().productMaterialProductIdGet(productId);
    }


    /**
     * DELETE /product-material/{productId}/{materialId} : Delete product&#39;s assigned material by product Id and material Id.
     *
     * @param productId  (required)
     * @param materialId  (required)
     * @return Success (status code 200)
     *         or If material with such id is not assigned to product with such id. (status code 404)
     */
    @ApiOperation(value = "Delete product's assigned material by product Id and material Id.", nickname = "productMaterialProductIdMaterialIdDelete", notes = "", tags={ "ProductMaterial", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success"),
        @ApiResponse(code = 404, message = "If material with such id is not assigned to product with such id.") })
    @DeleteMapping(
        value = "/product-material/{productId}/{materialId}"
    )
    default ResponseEntity<Void> productMaterialProductIdMaterialIdDelete(@ApiParam(value = "",required=true) @PathVariable("productId") Integer productId,@ApiParam(value = "",required=true) @PathVariable("materialId") Integer materialId) {
        return getDelegate().productMaterialProductIdMaterialIdDelete(productId, materialId);
    }


    /**
     * GET /product-material/{productId}/{materialId} : Get product&#39;s assigned material by product Id and material Id.
     *
     * @param productId  (required)
     * @param materialId  (required)
     * @return Success (status code 200)
     *         or If material with such id is not assigned to product with such id. (status code 404)
     */
    @ApiOperation(value = "Get product's assigned material by product Id and material Id.", nickname = "productMaterialProductIdMaterialIdGet", notes = "", response = ProductMaterial.class, tags={ "ProductMaterial", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ProductMaterial.class),
        @ApiResponse(code = 404, message = "If material with such id is not assigned to product with such id.") })
    @GetMapping(
        value = "/product-material/{productId}/{materialId}",
        produces = { "application/json" }
    )
    default ResponseEntity<ProductMaterial> productMaterialProductIdMaterialIdGet(@ApiParam(value = "",required=true) @PathVariable("productId") Integer productId,@ApiParam(value = "",required=true) @PathVariable("materialId") Integer materialId) {
        return getDelegate().productMaterialProductIdMaterialIdGet(productId, materialId);
    }


    /**
     * PUT /product-material/{productId}/{materialId} : Update product&#39;s assigned material by product Id and material Id.
     *
     * @param productId  (required)
     * @param materialId  (required)
     * @param productMaterial  (optional)
     * @return Success (status code 200)
     *         or If some class details are missing. (status code 400)
     *         or If material with such id is not assigned to product with such id. (status code 404)
     */
    @ApiOperation(value = "Update product's assigned material by product Id and material Id.", nickname = "productMaterialProductIdMaterialIdPut", notes = "", tags={ "ProductMaterial", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success"),
        @ApiResponse(code = 400, message = "If some class details are missing."),
        @ApiResponse(code = 404, message = "If material with such id is not assigned to product with such id.") })
    @PutMapping(
        value = "/product-material/{productId}/{materialId}",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> productMaterialProductIdMaterialIdPut(@ApiParam(value = "",required=true) @PathVariable("productId") Integer productId,@ApiParam(value = "",required=true) @PathVariable("materialId") Integer materialId,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) ProductMaterial productMaterial) {
        return getDelegate().productMaterialProductIdMaterialIdPut(productId, materialId, productMaterial);
    }

}
